{
  "uuid": "ee890cb3-8669-42d1-970c-130092b9b21e",
  "lastMigration": 29,
  "name": "paccurate.io",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "",
  "routes": [
    {
      "uuid": "8124a0df-8054-4552-8040-bc06e5f9b845",
      "documentation": "a pure-JSON endpoint for packing requests.\n",
      "method": "post",
      "endpoint": "",
      "responses": [
        {
          "uuid": "ce5701ee-972c-4a81-9116-5abb57ef4e9f",
          "body": "{\n  \"boxes\": [\n    {\n      \"dimensions\": {\n        \"x\": {{faker 'number.int'}},\n        \"y\": {{faker 'number.int'}},\n        \"z\": {{faker 'number.int'}}\n      },\n      \"name\": \"\",\n      \"price\": {{faker 'number.int'}},\n      \"rateTable\": {\n        \"basePrice\": {{faker 'number.int'}},\n        \"carrier\": \"\",\n        \"dimFactor\": {{faker 'number.int'}},\n        \"priceIncreaseRate\": {{faker 'number.int'}},\n        \"rates\": [\n          {{faker 'number.int'}}\n        ],\n        \"service\": \"\",\n        \"weights\": [\n          {{faker 'number.int'}}\n        ],\n        \"zone\": \"\"\n      },\n      \"weightMax\": {{faker 'number.int'}},\n      \"weightTare\": {{faker 'number.int'}}\n    }\n  ],\n  \"built\": \"\",\n  \"leftovers\": [\n    {\n      \"color\": \"\",\n      \"dimensions\": {\n        \"x\": {{faker 'number.int'}},\n        \"y\": {{faker 'number.int'}},\n        \"z\": {{faker 'number.int'}}\n      },\n      \"name\": \"\",\n      \"refId\": {{faker 'number.int'}},\n      \"sequence\": \"\",\n      \"weight\": {{faker 'number.int'}}\n    }\n  ],\n  \"lenBoxes\": {{faker 'number.int'}},\n  \"lenItems\": {{faker 'number.int'}},\n  \"lenLeftovers\": {{faker 'number.int'}},\n  \"packTime\": {{faker 'number.int'}},\n  \"renderTime\": {{faker 'number.int'}},\n  \"scripts\": \"\",\n  \"styles\": \"\",\n  \"svgs\": \"\",\n  \"title\": \"\",\n  \"totalCost\": {{faker 'number.int'}},\n  \"totalTime\": {{faker 'number.int'}},\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful pack.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "b472f216-5678-4087-ab73-32b91a02ece7",
          "body": "{\n  \"code\": {{faker 'number.int'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request. Malformed or some other problem occurred processing the request.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "04e1ac91-93e6-425d-9182-6ed427010090",
          "body": "{\n  \"code\": {{faker 'number.int'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Invalid input. The request was well-formed, but the parameters were contradictory, invalid, or otherwise somehow unable to be processed. More information will be contained in the error details.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "bf926c38-2259-4f50-ba95-ba699b489f3f",
          "body": "{\n  \"code\": {{faker 'number.int'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "Rate limited. Without an API key, only 10 unique requests are allowed per day for testing or demonstration purposes. Note that a randomized pack repeated is only a single unique request.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "6ad518fb-2db9-4a4b-99e9-bf1b3eda98c9",
          "body": "{\n  \"code\": {{faker 'number.int'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Unexpected error.",
          "headers": [{ "key": "Content-Type", "value": "application/json" }],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [{ "key": "", "value": "" }],
  "proxyResHeaders": [{ "key": "", "value": "" }],
  "data": [],
  "folders": [],
  "rootChildren": [
    { "type": "route", "uuid": "8124a0df-8054-4552-8040-bc06e5f9b845" }
  ]
}
